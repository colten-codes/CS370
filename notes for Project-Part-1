This is to store the login info to the database once written in.

<?php
// Connect to the database
$servername = "localhost";
$username = "db_username";
$password = "db_password";
$dbname = "db_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

//Retrieve data from the HTML form
$username = $_POST['username'];
$password = $_POST['password'];
$email = $_POST['email'];

// Hash the password
$password = password_hash($password, PASSWORD_DEFAULT);

// Prepare and bind
$stmt = $conn->prepare("INSERT INTO users (username, password, email) VALUES (?, ?, ?)");
$stmt->bind_param("sss", $username, $password, $email);

// Execute the statement
$stmt->execute();

// Close the statement and connection
$stmt->close();
$conn->close();
?>



This is to show the data for the student table on the website.

<?php
// Connect to the database
$servername = "localhost";
$username = "db_username";
$password = "db_password";
$dbname = "db_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

//Retrieve data from students table
$sql = "SELECT * FROM students";
$result = $conn->query($sql);

//Check if there are any results
if ($result->num_rows > 0) {
    // output data of each row
    while($row = $result->fetch_assoc()) {
        echo "student_id: " . $row["student_id"]. " - bluegold_id: " . $row["bluegold_id"]. " - Name: " . $row["name"]. 
	" - Address: " . $row["address"]. " - Phone: " . $row["phone"]. " - GPA: " . $row["gpa"]. " - Total Credit: " . $row["total_credit"]. "<br>";
    }
} else {
    echo "0 results";
}
$conn->close();
?>



CREATE TABLE students (
	student_id INT NOT NULL AUTO_INCREMENT,
	bluegold_id VARCHAR(8) NOT NULL,
	name VARCHAR(255) NOT NULL,
	address VARCHAR(255) NOT NULL,
	phone VARCHAR(15) NOT NULL,
	gpa DECIMAL(3,2) NOT NULL,
	total_credit INT NOT NULL,
	PRIMARY KEY (student_id),
	UNIQUE (bluegold_id)
);

CREATE TABLE logins (
	username VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	role ENUM('student', 'faculty') NOT NULL,
	PRIMARY KEY (username));




i am a bit unsure if this would work in html but it seems correct to add a captcha to the login screen.


<form action="/login" method="post">
    <label for="username">Username:</label>
    <input type="text" name="username" id="username" />
    <br />
    <label for="password">Password:</label>
    <input type="password" name="password" id="password" />
    <br />
    <img src="/captcha" alt="CAPTCHA" />
    <br />
    <label for="captcha">Enter the text above:</label>
    <input type="text" name="captcha" id="captcha" />
    <br />
    <input type="submit" value="Log in" />
</form>

This could be used in the java code to Generate a random string of letters and numbers.
private String generateCAPTCHAText() {
        String text = "";
        Random rnd = new Random();
        for (int i = 0; i < 6; i++) {
            char c = (char) (rnd.nextInt(26) + 'A');
            text += c;
        }
        return text;
    }




Using dbms


CREATE DATABASE student_db;


CREATE DATABASE login_db;



USE student_db;
CREATE TABLE students (
	student_id INT NOT NULL AUTO_INCREMENT,
	bluegold_id VARCHAR(8) NOT NULL,
	name VARCHAR(255) NOT NULL,
	address VARCHAR(255) NOT NULL,
	phone VARCHAR(15) NOT NULL,
	gpa DECIMAL(3,2) NOT NULL,
	total_credit INT NOT NULL,
	PRIMARY KEY (student_id),
	UNIQUE (bluegold_id)
);


USE login_db;
CREATE TABLE logins (
	username VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	role ENUM('student', 'faculty') NOT NULL,
	PRIMARY KEY (username)
);



